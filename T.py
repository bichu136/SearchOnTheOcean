#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 5.0.3
#  in conjunction with Tcl version 8.6
#    Apr 03, 2020 10:37:05 AM +07  platform: Linux

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import T_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    T_support.set_Tk_var()
    top = TopLvl (root)
    T_support.init(root, top)
    root.mainloop()

w = None
def create_TopLvl(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_TopLvl(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    T_support.set_Tk_var()
    top = TopLvl (w)
    T_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_TopLvl():
    global w
    w.destroy()
    w = None

class TopLvl:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        top.geometry("580x466+616+203")
        top.minsize(1, 1)
        top.maxsize(1905, 1050)
        top.resizable(1, 1)
        top.title("New Toplevel")
        top.configure(highlightcolor="black")

        self.CnvOcean = tk.Canvas(top)
        self.CnvOcean.place(relx=0.017, rely=0.021, relheight=0.603
                , relwidth=0.567)
        self.CnvOcean.configure(background="#221cd8")
        self.CnvOcean.configure(borderwidth="2")
        self.CnvOcean.configure(relief="ridge")
        self.CnvOcean.configure(selectbackground="#c4c4c4")

        self.Button1 = tk.Button(top)
        self.Button1.place(relx=0.033, rely=0.665, height=28, width=67)
        self.Button1.configure(text='''Button''')

        self.Button2 = tk.Button(top)
        self.Button2.place(relx=0.8, rely=0.322, height=28, width=67)
        self.Button2.configure(text='''Button''')

        self.Button3 = tk.Button(top)
        self.Button3.place(relx=0.65, rely=0.322, height=28, width=67)
        self.Button3.configure(text='''Button''')

        self.RdBtnDFS = tk.Radiobutton(top)
        self.RdBtnDFS.place(relx=0.633, rely=0.064, relheight=0.043
                , relwidth=0.098)
        self.RdBtnDFS.configure(justify='left')
        self.RdBtnDFS.configure(text='''DFS''')
        self.RdBtnDFS.configure(value="0")
        self.RdBtnDFS.configure(variable=T_support.SearchOptions)

        self.RdBtnBFS = tk.Radiobutton(top)
        self.RdBtnBFS.place(relx=0.633, rely=0.129, relheight=0.043
                , relwidth=0.098)
        self.RdBtnBFS.configure(justify='left')
        self.RdBtnBFS.configure(text='''BFS''')
        self.RdBtnBFS.configure(value="1")
        self.RdBtnBFS.configure(variable=T_support.SearchOptions)

        self.RdBtnIDS = tk.Radiobutton(top)
        self.RdBtnIDS.place(relx=0.633, rely=0.193, relheight=0.043
                , relwidth=0.098)
        self.RdBtnIDS.configure(justify='left')
        self.RdBtnIDS.configure(text='''IDS''')
        self.RdBtnIDS.configure(value="2")
        self.RdBtnIDS.configure(variable=T_support.SearchOptions)

        self.RdBtnLowCost = tk.Radiobutton(top)
        self.RdBtnLowCost.place(relx=0.633, rely=0.258, relheight=0.043
                , relwidth=0.148)
        self.RdBtnLowCost.configure(justify='left')
        self.RdBtnLowCost.configure(text='''LowCost''')
        self.RdBtnLowCost.configure(value="3")
        self.RdBtnLowCost.configure(variable=T_support.SearchOptions)

        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

if __name__ == '__main__':
    vp_start_gui()





